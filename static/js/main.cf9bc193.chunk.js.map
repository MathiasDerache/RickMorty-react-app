{"version":3,"sources":["Assets/images/logo.png","Components/Home.js","ApiCall.js","Components/ListChara.js","Components/Pagination.js","Assets/images/logo2.png","Assets/images/arrow.svg","Components/Characters.js","App.js","index.js"],"names":["Home","className","to","src","logo","alt","apiCall","axios","create","baseURL","ListChara","props","cardRef","useRef","color","status","useEffect","gsap","current","y","autoAlpha","delay","ref","image","name","species","gender","origin","style","Pagination","useState","maxPageNumberLimit","setMaxPageNumberLimit","minPageNumberLimit","setMinPageNumberLimit","pageRef","nextBtn","setCurrentPage","currentPage","prevBtn","onClick","disabled","map","num","index","changePage","Characters","data","setData","done","setDone","imgRef","titleRef","get","then","res","results","catch","err","console","log","scale","opacity","x","ease","arrow","window","scrollTo","top","left","behavior","chara","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf9bc193.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import React from 'react'\r\nimport logo from '../Assets/images/logo.png'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <>  \r\n            <div className=\"homePage\">\r\n                <Link to=\"/character\">\r\n                <img src={logo} alt=\"logo\" className=\"logo\"/>\r\n                </Link>\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const apiCall = axios.create({\r\n    baseURL: 'https://rickandmortyapi.com/api'\r\n})","import React from 'react'\r\nimport {useEffect, useRef } from 'react';\r\nimport gsap from \"gsap\";\r\n\r\nexport default function ListChara(props) {\r\n\r\n    const cardRef = useRef(null)\r\n\r\n    var color = 'white'\r\n\r\n        if (props.status === 'Alive'){\r\n            color = '#69EB69  ';\r\n        }  else if(props.status === 'Dead'){\r\n            color = 'red';\r\n        }\r\n\r\n\r\n        useEffect(() => {\r\n\r\n            gsap.to(cardRef.current, {\r\n                y: 0,\r\n                autoAlpha: 1, \r\n                delay : 1.3\r\n            })\r\n\r\n        }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"card\" ref={cardRef} >\r\n            <div>\r\n                <img src={props.image} alt=\"chara\" />\r\n            </div>\r\n            <div className=\"textChara\">\r\n                <p> <span>Name : </span> {props.name}</p>\r\n                <p> <span>Species : </span> {props.species}</p>\r\n                <p><span>Gender : </span> {props.gender}</p>\r\n                <p><span>Origin : </span> {props.origin}</p>\r\n                <p style={{color : color}}><span>Status : </span> {props.status}</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { useState, useEffect, useRef} from 'react'\r\nimport gsap from \"gsap\";\r\n\r\nexport default function Pagination(props) {\r\n\r\n    const pagination = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34];\r\n\r\n    const pageNumberLimit = 5;\r\n    const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\r\n\r\n    const pageRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n\r\n        gsap.to(pageRef.current, {\r\n            y: 0,\r\n            autoAlpha: 1, \r\n            delay : 1.3\r\n        })\r\n\r\n    }, [])\r\n\r\n    const nextBtn = () => {\r\n        props.setCurrentPage(props.currentPage + 1)\r\n        if(props.currentPage + 1 > maxPageNumberLimit){\r\n            setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        }\r\n    }\r\n\r\n    const prevBtn = () => {\r\n        props.setCurrentPage(props.currentPage - 1)\r\n        if((props.currentPage - 1) % pageNumberLimit === 0){\r\n            setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"listPagination\" ref={pageRef}>\r\n            {props.currentPage === 1 ? <button  className=\"switchPage\" onClick={prevBtn} disabled >Prev</button> :\r\n            <button  className=\"switchPage\" onClick={prevBtn}>Prev</button>  }\r\n            \r\n\r\n            {pagination.map((num, index) => {\r\n                if( num < maxPageNumberLimit+1 && num > minPageNumberLimit){\r\n                    return (\r\n                            <ul onClick={() => props.changePage(num)} key={index} className={ props.currentPage === num ? 'active pagination' : 'notActive pagination' } >\r\n                                {num}\r\n                            </ul>\r\n\r\n                    )\r\n                } else{\r\n                    return null;\r\n                }\r\n            })}\r\n            {props.currentPage === 34 ? <button className=\"switchPage\" onClick={nextBtn} disabled>Next</button> : \r\n            <button className=\"switchPage\" onClick={nextBtn}>Next</button> }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo2.1cc4ae97.png\";","export default __webpack_public_path__ + \"static/media/arrow.792c8c47.svg\";","import React from 'react'\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { apiCall } from '../ApiCall';\r\nimport ListChara from './ListChara';\r\nimport Pagination from './Pagination';\r\nimport logo from '../Assets/images/logo2.png'\r\nimport arrow from '../Assets/images/arrow.svg'\r\nimport gsap from \"gsap\";\r\n\r\n\r\nexport default function Characters() {\r\n\r\n    const [data, setData] = useState();\r\n    const [done, setDone] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState('1');\r\n\r\n  \r\n    const imgRef = useRef(null)\r\n    const titleRef = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            apiCall.get( '/character?page='+currentPage )\r\n                .then((res) => {\r\n                    setData(res.data.results);\r\n                    setDone(true)\r\n                    \r\n        \r\n                  })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n\r\n        fetchData()\r\n\r\n        gsap.to(imgRef.current, {\r\n            scale : 1,  \r\n            delay : 0.2\r\n        })\r\n        gsap.to(titleRef.current, {\r\n            opacity:1,\r\n            delay: 0.8,\r\n            x : 0,\r\n            ease: \"Back.easeOut\"\r\n        })\r\n\r\n    }, [currentPage]);\r\n    \r\n\r\n    const changePage = (num) => {\r\n        setCurrentPage(num)\r\n    }\r\n\r\n    const upPage = () => {\r\n\r\n        window.scrollTo({\r\n            top:0,\r\n            left:0,\r\n            behavior: \"smooth\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <div className=\"arrowBtn\">\r\n            <img src={arrow} alt=\"\" className=\"arrowIcone\" onClick={upPage}/>\r\n        </div>\r\n\r\n        <div  className=\"logoChara\">\r\n            <img src={logo} alt=\"Logo\" ref={imgRef}/>\r\n            <h1 className=\"title\" ref={titleRef}>Characters List</h1>\r\n        </div>\r\n        <div>\r\n                <Pagination\r\n                changePage={changePage}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                />\r\n        </div>\r\n        <div className=\"card-chara\">\r\n            {done ?\r\n            data.map((chara, index) =>  \r\n                \r\n                    <ListChara\r\n                    key={index}\r\n                    origin={chara.origin.name}\r\n                    name={chara.name}\r\n                    status={chara.status}\r\n                    species={chara.species}\r\n                    gender={chara.gender}\r\n                    image={chara.image}\r\n                    />\r\n                \r\n                \r\n            )\r\n            : <p>Loading</p>}\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\r\nimport Home from './Components/Home';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Characters from './Components/Characters';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path='/' exact component={Home}/>\r\n            <Route path='/character' exact component={Characters}/>\r\n          </Switch>\r\n        </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}